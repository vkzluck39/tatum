'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
exports.inputTransferFilterFormatter = exports.inputBlockFilterFormatter = exports.inputLogFilterFormatter = exports.extendFormatters = void 0;
const debug = require('debug')('thor:injector');
const utils = require("../utils");
const extendFormatters = function (web3) {
    const web3Utils = web3.utils;
    const outputTransactionFormatter = web3.extend.formatters.outputTransactionFormatter;
    web3.extend.formatters.outputTransactionFormatter = function (tx) {
        if (tx && tx.isThorified) {
            debug('outputTransactionFormatter');
            tx.chainTag = web3Utils.numberToHex(tx.chainTag);
            if (tx.clauses) {
                for (const clause of tx.clauses) {
                    clause.value = web3.extend.formatters.outputBigNumberFormatter(clause.value);
                }
            }
            return tx;
        }
        else {
            return outputTransactionFormatter(tx);
        }
    };
    const outputTransactionReceiptFormatter = web3.extend.formatters.outputTransactionReceiptFormatter;
    web3.extend.formatters.outputTransactionReceiptFormatter = function (receipt) {
        if (receipt && receipt.isThorified) {
            debug('outputTransactionReceiptFormatter');
            if (receipt.hasOwnProperty('transactionIndex')) {
                delete receipt.transactionIndex;
            }
            if (receipt.hasOwnProperty('cumulativeGasUsed')) {
                delete receipt.cumulativeGasUsed;
            }
            receipt.gasUsed = web3Utils.hexToNumber(receipt.gasUsed);
            for (const output of receipt.outputs) {
                if (output.events) {
                    output.events = output.events.map((event) => {
                        if (!event.isThorified) {
                            Object.defineProperty(event, 'isThorified', { get: () => true });
                        }
                        return web3.extend.formatters.outputLogFormatter(event);
                    });
                }
            }
            return receipt;
        }
        else {
            return outputTransactionReceiptFormatter(receipt);
        }
    };
    const outputLogFormatter = web3.extend.formatters.outputLogFormatter;
    web3.extend.formatters.outputLogFormatter = function (log) {
        if (log && log.isThorified) {
            debug('outputLogFormatter');
            if (log.hasOwnProperty('transactionIndex')) {
                delete log.transactionIndex;
            }
            if (log.hasOwnProperty('logIndex')) {
                delete log.logIndex;
            }
            if (log.hasOwnProperty('id')) {
                delete log.id;
            }
            return log;
        }
        else {
            return outputLogFormatter(log);
        }
    };
};
exports.extendFormatters = extendFormatters;
const inputLogFilterFormatter = function (options) {
    if (options) {
        const logFilterOptions = {};
        if (options.address) {
            logFilterOptions.address = utils.validAddressOrError(options.address);
        }
        if (options.pos) {
            logFilterOptions.pos = utils.validBytes32OrError(options.pos, 'Invalid position(block ID)');
        }
        if (options.t0) {
            logFilterOptions.t0 = utils.validBytes32OrError(options.t0, 'Invalid t0');
        }
        if (options.t1) {
            logFilterOptions.t1 = utils.validBytes32OrError(options.t1, 'Invalid t1');
        }
        if (options.t2) {
            logFilterOptions.t2 = utils.validBytes32OrError(options.t2, 'Invalid t2');
        }
        if (options.t3) {
            logFilterOptions.t3 = utils.validBytes32OrError(options.t3, 'Invalid t3');
        }
        if (options.t4) {
            logFilterOptions.t4 = utils.validBytes32OrError(options.t4, 'Invalid t4');
        }
        return logFilterOptions;
    }
};
exports.inputLogFilterFormatter = inputLogFilterFormatter;
const inputBlockFilterFormatter = function (blockID) {
    if (blockID) {
        blockID = utils.validBytes32OrError(blockID, 'Invalid position(block ID)');
        return blockID;
    }
};
exports.inputBlockFilterFormatter = inputBlockFilterFormatter;
const inputTransferFilterFormatter = function (options) {
    if (options) {
        const transferFilterOptions = {};
        if (options.pos) {
            transferFilterOptions.pos = utils.validBytes32OrError(options.pos, 'Invalid position(block ID)');
        }
        if (options.txOrigin) {
            transferFilterOptions.txOrigin = utils.validAddressOrError(options.txOrigin);
        }
        if (options.sender) {
            transferFilterOptions.sender = utils.validAddressOrError(options.sender);
        }
        if (options.recipient) {
            transferFilterOptions.recipient = utils.validAddressOrError(options.recipient);
        }
        return transferFilterOptions;
    }
};
exports.inputTransferFilterFormatter = inputTransferFilterFormatter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0dGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9leHRlbmQvZm9ybWF0dGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUE7OztBQUNaLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQTtBQUUvQyxrQ0FBaUM7QUFFakMsTUFBTSxnQkFBZ0IsR0FBRyxVQUFTLElBQVM7SUFDdkMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQTtJQUM1QixNQUFNLDBCQUEwQixHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLDBCQUEwQixDQUFBO0lBQ3BGLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLDBCQUEwQixHQUFHLFVBQVMsRUFBTztRQUNoRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFO1lBQ3RCLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFBO1lBQ25DLEVBQUUsQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUE7WUFFaEQsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFO2dCQUNaLEtBQUssTUFBTSxNQUFNLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRTtvQkFDN0IsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7aUJBQy9FO2FBQ0o7WUFDRCxPQUFPLEVBQUUsQ0FBQTtTQUNaO2FBQU07WUFDSCxPQUFPLDBCQUEwQixDQUFDLEVBQUUsQ0FBQyxDQUFBO1NBQ3hDO0lBQ0wsQ0FBQyxDQUFBO0lBRUQsTUFBTSxpQ0FBaUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxpQ0FBaUMsQ0FBQTtJQUNsRyxJQUFJLENB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LENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLDRCQUE0QixDQUFDLENBQUE7U0FDbkc7UUFDRCxJQUFJLE9BQU8sQ0FBQyxRQUFRLEVBQUU7WUFDbEIscUJBQXFCLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7U0FDL0U7UUFDRCxJQUFJLE9BQU8sQ0FBQyxNQUFNLEVBQUU7WUFDaEIscUJBQXFCLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7U0FDM0U7UUFDRCxJQUFJLE9BQU8sQ0FBQyxTQUFTLEVBQUU7WUFDbkIscUJBQXFCLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUE7U0FDakY7UUFDRCxPQUFPLHFCQUFxQixDQUFBO0tBQy9CO0FBQ0wsQ0FBQyxDQUFBO0FBTUcsb0VBQTRCIn0=