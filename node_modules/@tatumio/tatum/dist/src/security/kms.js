"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPendingTransactionsKMSByChain = exports.completePendingTransactionKMS = exports.deleteTransactionKMS = exports.getTransactionKMS = void 0;
const tatum_1 = require("../connector/tatum");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/GetPendingTransactionToSign" target="_blank">Tatum API documentation</a>
 */
const getTransactionKMS = async (id) => tatum_1.get(`/v3/kms/${id}`);
exports.getTransactionKMS = getTransactionKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DeletePendingTransactionToSign" target="_blank">Tatum API documentation</a>
 */
const deleteTransactionKMS = async (id, revert = true) => tatum_1.httpDelete(`/v3/kms/${id}?revert=${revert}`);
exports.deleteTransactionKMS = deleteTransactionKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/CompletePendingSignature" target="_blank">Tatum API documentation</a>
 */
const completePendingTransactionKMS = async (id, txId) => tatum_1.put(`/v3/kms/${id}/${txId}`);
exports.completePendingTransactionKMS = completePendingTransactionKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/GetPendingTransactionsToSign" target="_blank">Tatum API documentation</a>
 */
const getPendingTransactionsKMSByChain = async (chain, signatures) => {
    let url = `/v3/kms/pending/${chain}`;
    if (signatures) {
        url += `?signatures=${signatures}`;
    }
    return tatum_1.get(url);
};
exports.getPendingTransactionsKMSByChain = getPendingTransactionsKMSByChain;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia21zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3NlY3VyaXR5L2ttcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBd0Q7QUFHeEQ7O0dBRUc7QUFDSSxNQUFNLGlCQUFpQixHQUFHLEtBQUssRUFBRSxFQUFVLEVBQTJCLEVBQUUsQ0FBQyxXQUFHLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQXhGLFFBQUEsaUJBQWlCLHFCQUF1RTtBQUVyRzs7R0FFRztBQUNJLE1BQU0sb0JBQW9CLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBRSxNQUFNLEdBQUcsSUFBSSxFQUFpQixFQUFFLENBQUMsa0JBQVUsQ0FBQyxXQUFXLEVBQUUsV0FBVyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0FBQXhILFFBQUEsb0JBQW9CLHdCQUFvRztBQUVySTs7R0FFRztBQUNJLE1BQU0sNkJBQTZCLEdBQUcsS0FBSyxFQUFFLEVBQVUsRUFBRSxJQUFZLEVBQWlCLEVBQUUsQ0FBQyxXQUFHLENBQUMsV0FBVyxFQUFFLElBQUksSUFBSSxFQUFFLENBQUMsQ0FBQztBQUFoSCxRQUFBLDZCQUE2QixpQ0FBbUY7QUFFN0g7O0dBRUc7QUFDSSxNQUFNLGdDQUFnQyxHQUFHLEtBQUssRUFBRSxLQUFlLEVBQUUsVUFBbUIsRUFBNkIsRUFBRTtJQUN0SCxJQUFJLEdBQUcsR0FBRyxtQkFBbUIsS0FBSyxFQUFFLENBQUM7SUFDckMsSUFBSSxVQUFVLEVBQUU7UUFDWixHQUFHLElBQUksZUFBZSxVQUFVLEVBQUUsQ0FBQztLQUN0QztJQUNELE9BQU8sV0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQ3BCLENBQUMsQ0FBQztBQU5XLFFBQUEsZ0NBQWdDLG9DQU0zQyJ9