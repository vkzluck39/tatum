"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignatureIdValidator = void 0;
const class_validator_1 = require("class-validator");
let SignatureIdValidator = class SignatureIdValidator {
    defaultMessage(validationArguments) {
        return 'Either signatureId, privateKey/secret/fromPrivateKey or feesCovered must be present. Combination is not allowed.';
    }
    validate(value, validationArguments) {
        const data = validationArguments === null || validationArguments === void 0 ? void 0 : validationArguments.object;
        if (data.feesCovered) {
            if (data.fromPrivateKey || data.signatureId || data.privateKey || data.secret || data.fromSecret) {
                return false;
            }
            return true;
        }
        if (data.fromPrivateKey && data.signatureId) {
            return false;
        }
        if (!data.fromPrivateKey && !data.signatureId) {
            return false;
        }
        if (data.privateKey && data.signatureId) {
            return false;
        }
        if (data.secret && data.signatureId) {
            return false;
        }
        if (data.fromSecret && data.signatureId) {
            return false;
        }
        return true;
    }
};
SignatureIdValidator = __decorate([
    class_validator_1.ValidatorConstraint({ name: 'signatureId', async: false })
], SignatureIdValidator);
exports.SignatureIdValidator = SignatureIdValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbmF0dXJlSWRWYWxpZGF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kZWwvdmFsaWRhdGlvbi9TaWduYXR1cmVJZFZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxxREFBd0c7QUFHeEcsSUFBYSxvQkFBb0IsR0FBakMsTUFBYSxvQkFBb0I7SUFDeEIsY0FBYyxDQUFDLG1CQUF5QztRQUM3RCxPQUFPLGtIQUFrSCxDQUFBO0lBQzNILENBQUM7SUFFTSxRQUFRLENBQUMsS0FBVSxFQUFFLG1CQUF5QztRQUNuRSxNQUFNLElBQUksR0FBRyxtQkFBbUIsYUFBbkIsbUJBQW1CLHVCQUFuQixtQkFBbUIsQ0FBRSxNQUFhLENBQUE7UUFDL0MsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLElBQUksSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO2dCQUNoRyxPQUFPLEtBQUssQ0FBQzthQUNkO1lBQ0QsT0FBTyxJQUFJLENBQUE7U0FDWjtRQUNELElBQUksSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQzNDLE9BQU8sS0FBSyxDQUFBO1NBQ2I7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDN0MsT0FBTyxLQUFLLENBQUE7U0FDYjtRQUNELElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3ZDLE9BQU8sS0FBSyxDQUFBO1NBQ2I7UUFDRCxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNuQyxPQUFPLEtBQUssQ0FBQTtTQUNiO1FBQ0QsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDdkMsT0FBTyxLQUFLLENBQUE7U0FDYjtRQUNELE9BQU8sSUFBSSxDQUFBO0lBQ2IsQ0FBQztDQUVGLENBQUE7QUEvQlksb0JBQW9CO0lBRGhDLHFDQUFtQixDQUFDLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUM7R0FDOUMsb0JBQW9CLENBK0JoQztBQS9CWSxvREFBb0IifQ==