declare class PrivateKeyOrSignatureIdBtcBased {
    /**
     * Private key of the address to send assets from. Private key, or signature Id must be present.
     */
    privateKey?: string;
    /**
     * Identifier of the private key associated in signing application. Private key, or signature Id must be present.
     */
    signatureId?: string;
}
export declare class FromAddress extends PrivateKeyOrSignatureIdBtcBased {
    /**
     * Address to send assets from.
     */
    address: string;
}
export declare class FromUTXO extends PrivateKeyOrSignatureIdBtcBased {
    /**
     * Transaction hash of the UTXO to be spent.
     */
    txHash: string;
    /**
     * Index of the UTXO to be spent.
     */
    index: number;
}
export declare class To {
    /**
     * Destination address.
     */
    address: string;
    /**
     * Amount to be sent.
     */
    value: number;
}
/**
 * Transfer BTC based blockchain.
 *
 * This class is used for transferring assets of all BTC based blockchains.
 */
export declare class TransferBtcBasedBlockchain {
    /**
     * Array of addresses and corresponding private keys.
     * Tatum will automatically scan last 100 transactions for each address and will use all of the unspent values.
     * We advise to use this option if you have 1 address per 1 transaction only.
     */
    fromAddress?: FromAddress[];
    /**
     * Array of transaction hashes, index of UTXO in it and corresponding private keys.
     * Use this option if you want to calculate amount to send manually.
     * Either fromUTXO or fromAddress must be present.
     */
    fromUTXO?: FromUTXO[];
    /**
     * Array of addresses and values to send bitcoins to. Values must be set in BTC. Difference between from and to is transaction fee.
     */
    to: To[];
}
export {};
