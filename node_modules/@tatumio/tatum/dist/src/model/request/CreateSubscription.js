"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateSubscription = exports.SubscriptionAttrCompleteBlockchainTx = exports.SubscriptionAttrUrlAddress = exports.SubscriptionAttrUrl = exports.SubscriptionAttrIncomingBlockchainTx = exports.SubscriptionAttrTxHistoryReport = exports.SubscriptionAttrOffchainWithdrawal = exports.SubscriptionAttrAccountBalanceLimit = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const SubscriptionType_1 = require("../response/ledger/SubscriptionType");
const Currency_1 = require("./Currency");
class Subscription {
}
class SubscriptionAttrAccountBalanceLimit extends Subscription {
}
__decorate([
    class_validator_1.MaxLength(38),
    class_validator_1.IsNotEmpty(),
    class_validator_1.Matches(/^[+]?((\d+(\.\d*)?)|(\.\d+))$/),
    __metadata("design:type", String)
], SubscriptionAttrAccountBalanceLimit.prototype, "limit", void 0);
__decorate([
    class_validator_1.IsNotEmpty(),
    class_validator_1.IsIn(['account', 'available']),
    __metadata("design:type", String)
], SubscriptionAttrAccountBalanceLimit.prototype, "typeOfBalance", void 0);
exports.SubscriptionAttrAccountBalanceLimit = SubscriptionAttrAccountBalanceLimit;
class SubscriptionAttrOffchainWithdrawal extends Subscription {
}
__decorate([
    class_validator_1.IsNotEmpty(),
    class_validator_1.Length(1, 30),
    class_validator_1.Matches(/^BTC|BNB|LTC|BCH|ETH|USDT|LEO|LINK|UNI|FREE|MKR|USDC|BAT|TUSD|PAX|PAXG|PLTC|XCON|MMY|[a-zA-Z0-9_]+$/),
    __metadata("design:type", String)
], SubscriptionAttrOffchainWithdrawal.prototype, "currency", void 0);
exports.SubscriptionAttrOffchainWithdrawal = SubscriptionAttrOffchainWithdrawal;
class SubscriptionAttrTxHistoryReport extends Subscription {
}
__decorate([
    class_validator_1.IsNotEmpty(),
    class_validator_1.IsNumber(),
    class_validator_1.Min(1),
    class_validator_1.Max(720),
    __metadata("design:type", Number)
], SubscriptionAttrTxHistoryReport.prototype, "interval", void 0);
exports.SubscriptionAttrTxHistoryReport = SubscriptionAttrTxHistoryReport;
class SubscriptionAttrIncomingBlockchainTx extends Subscription {
}
__decorate([
    class_validator_1.Length(24, 24),
    class_validator_1.IsNotEmpty(),
    __metadata("design:type", String)
], SubscriptionAttrIncomingBlockchainTx.prototype, "id", void 0);
__decorate([
    class_validator_1.IsUrl(),
    class_validator_1.IsNotEmpty(),
    class_validator_1.MaxLength(500),
    __metadata("design:type", String)
], SubscriptionAttrIncomingBlockchainTx.prototype, "url", void 0);
exports.SubscriptionAttrIncomingBlockchainTx = SubscriptionAttrIncomingBlockchainTx;
class SubscriptionAttrUrl extends Subscription {
}
__decorate([
    class_validator_1.IsUrl(),
    class_validator_1.IsNotEmpty(),
    class_validator_1.MaxLength(500),
    __metadata("design:type", String)
], SubscriptionAttrUrl.prototype, "url", void 0);
exports.SubscriptionAttrUrl = SubscriptionAttrUrl;
class SubscriptionAttrUrlAddress extends Subscription {
}
__decorate([
    class_validator_1.IsUrl(),
    class_validator_1.IsNotEmpty(),
    class_validator_1.MaxLength(500),
    __metadata("design:type", String)
], SubscriptionAttrUrlAddress.prototype, "url", void 0);
__decorate([
    class_validator_1.IsIn([
        Currency_1.Currency.SOL,
        Currency_1.Currency.ETH,
        Currency_1.Currency.MATIC,
        Currency_1.Currency.CELO,
        Currency_1.Currency.BTC,
        Currency_1.Currency.LTC,
        Currency_1.Currency.BCH,
        Currency_1.Currency.DOGE,
    ]),
    class_validator_1.IsNotEmpty(),
    __metadata("design:type", String)
], SubscriptionAttrUrlAddress.prototype, "chain", void 0);
__decorate([
    class_validator_1.Length(13, 128),
    class_validator_1.IsNotEmpty(),
    __metadata("design:type", String)
], SubscriptionAttrUrlAddress.prototype, "address", void 0);
exports.SubscriptionAttrUrlAddress = SubscriptionAttrUrlAddress;
class SubscriptionAttrCompleteBlockchainTx extends Subscription {
}
__decorate([
    class_validator_1.IsNotEmpty(),
    class_validator_1.Length(1, 30),
    class_validator_1.Matches(/^BTC|ADA|LTC|FLOW|FUSD|ONE|XDC|DOGE|RMD|BSC|CELO|CEUR|CUSD|BETH|GMC|GMC_BSC|BUSD|BUSD_BSC|CAKE|BBTC|BADA|WBNB|BDOT|BXRP|BLTC|BBCH|BCH|ETH|USDT|WBTC|LEO|LINK|UNI|FREE|MKR|USDC|BAT|TUSD|PAX|PAXG|PLTC|XCON|MMY|[a-zA-Z0-9_]+$/),
    __metadata("design:type", String)
], SubscriptionAttrCompleteBlockchainTx.prototype, "currency", void 0);
exports.SubscriptionAttrCompleteBlockchainTx = SubscriptionAttrCompleteBlockchainTx;
class CreateSubscription {
}
__decorate([
    class_validator_1.IsNotEmpty(),
    class_validator_1.IsIn(Object.values(SubscriptionType_1.SubscriptionType)),
    __metadata("design:type", String)
], CreateSubscription.prototype, "type", void 0);
__decorate([
    class_validator_1.IsNotEmptyObject(),
    class_validator_1.ValidateNested(),
    class_transformer_1.Type(() => Subscription, {
        discriminator: {
            property: '__type',
            subTypes: [
                { value: SubscriptionAttrAccountBalanceLimit, name: 'ACCOUNT_BALANCE_LIMIT' },
                { value: SubscriptionAttrUrl, name: 'KMS_COMPLETED_TX' },
                { value: SubscriptionAttrUrl, name: 'KMS_FAILED_TX' },
                { value: SubscriptionAttrUrl, name: 'CUSTOMER_TRADE_MATCH' },
                { value: SubscriptionAttrUrl, name: 'TRANSACTION_IN_THE_BLOCK' },
                { value: SubscriptionAttrUrlAddress, name: 'ADDRESS_TRANSACTION' },
                { value: SubscriptionAttrOffchainWithdrawal, name: 'OFFCHAIN_WITHDRAWAL' },
                { value: SubscriptionAttrTxHistoryReport, name: 'TRANSACTION_HISTORY_REPORT' },
                { value: SubscriptionAttrIncomingBlockchainTx, name: 'ACCOUNT_INCOMING_BLOCKCHAIN_TRANSACTION' },
                { value: SubscriptionAttrCompleteBlockchainTx, name: 'COMPLETE_BLOCKCHAIN_TRANSACTION' },
                { value: SubscriptionAttrIncomingBlockchainTx, name: 'ACCOUNT_PENDING_BLOCKCHAIN_TRANSACTION' },
            ],
        },
    }),
    __metadata("design:type", Object)
], CreateSubscription.prototype, "attr", void 0);
exports.CreateSubscription = CreateSubscription;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRlU3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZGVsL3JlcXVlc3QvQ3JlYXRlU3Vic2NyaXB0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLHlEQUF5QztBQUN6QyxxREFZeUI7QUFDekIsMEVBQXVFO0FBQ3ZFLHlDQUFxQztBQUVyQyxNQUFlLFlBQVk7Q0FFMUI7QUFFRCxNQUFhLG1DQUFvQyxTQUFRLFlBQVk7Q0FVcEU7QUFMQztJQUhDLDJCQUFTLENBQUMsRUFBRSxDQUFDO0lBQ2IsNEJBQVUsRUFBRTtJQUNaLHlCQUFPLENBQUMsK0JBQStCLENBQUM7O2tFQUNwQjtBQUlyQjtJQUZDLDRCQUFVLEVBQUU7SUFDWixzQkFBSSxDQUFDLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDOzswRUFDRjtBQVQvQixrRkFVQztBQUVELE1BQWEsa0NBQW1DLFNBQVEsWUFBWTtDQU1uRTtBQURDO0lBSEMsNEJBQVUsRUFBRTtJQUNaLHdCQUFNLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztJQUNiLHlCQUFPLENBQUMscUdBQXFHLENBQUM7O29FQUN2RjtBQUwxQixnRkFNQztBQUVELE1BQWEsK0JBQWdDLFNBQVEsWUFBWTtDQU1oRTtBQURDO0lBSkMsNEJBQVUsRUFBRTtJQUNaLDBCQUFRLEVBQUU7SUFDVixxQkFBRyxDQUFDLENBQUMsQ0FBQztJQUNOLHFCQUFHLENBQUMsR0FBRyxDQUFDOztpRUFDZTtBQUwxQiwwRUFNQztBQUVELE1BQWEsb0NBQXFDLFNBQVEsWUFBWTtDQVVyRTtBQU5DO0lBRkMsd0JBQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDO0lBQ2QsNEJBQVUsRUFBRTs7Z0VBQ0s7QUFLbEI7SUFIQyx1QkFBSyxFQUFFO0lBQ1AsNEJBQVUsRUFBRTtJQUNaLDJCQUFTLENBQUMsR0FBRyxDQUFDOztpRUFDSTtBQVRyQixvRkFVQztBQUVE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