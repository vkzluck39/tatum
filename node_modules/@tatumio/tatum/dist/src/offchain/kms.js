"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.offchainTransferEgldKMS = exports.offchainTransferXdcKMS = exports.offchainTransferTronKMS = exports.offchainTransferKlaytnKMS = exports.offchainTransferPolygonKMS = exports.offchainTransferDogeKMS = exports.offchainTransferCeloKMS = exports.offchainTransferBscKMS = exports.offchainTransferAdaKMS = exports.offchainTransferXrpKMS = exports.offchainTransferXlmKMS = exports.offchainTransferEthErc20KMS = exports.offchainTransferEthKMS = exports.offchainTransferBcashKMS = exports.offchainTransferLtcKMS = exports.offchainTransferBtcKMS = void 0;
const tatum_1 = require("../connector/tatum");
const model_1 = require("../model");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BtcTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferBtcKMS = async (body) => tatum_1.post(`/v3/offchain/bitcoin/transfer`, body, model_1.TransferBtcBasedOffchainKMS);
exports.offchainTransferBtcKMS = offchainTransferBtcKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/LtcTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferLtcKMS = async (body) => tatum_1.post(`/v3/offchain/litecoin/transfer`, body, model_1.TransferBtcBasedOffchainKMS);
exports.offchainTransferLtcKMS = offchainTransferLtcKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BchTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferBcashKMS = async (body) => tatum_1.post(`/v3/offchain/bcash/transfer`, body, model_1.TransferBtcBasedOffchainKMS);
exports.offchainTransferBcashKMS = offchainTransferBcashKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferEthKMS = async (body) => tatum_1.post(`/v3/offchain/ethereum/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferEthKMS = offchainTransferEthKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthTransferErc20" target="_blank">Tatum API documentation</a>
 */
const offchainTransferEthErc20KMS = async (body) => tatum_1.post(`/v3/offchain/ethereum/erc20/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferEthErc20KMS = offchainTransferEthErc20KMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/XlmTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferXlmKMS = async (body) => tatum_1.post(`/v3/offchain/xlm/transfer`, body, model_1.TransferXlmOffchainKMS);
exports.offchainTransferXlmKMS = offchainTransferXlmKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/XrpTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferXrpKMS = async (body) => tatum_1.post(`/v3/offchain/xrp/transfer`, body, model_1.TransferXrpOffchainKMS);
exports.offchainTransferXrpKMS = offchainTransferXrpKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/AdaTransferOffchain" target="_blank">Tatum API documentation</a>
 */
const offchainTransferAdaKMS = async (body) => tatum_1.post(`/v3/offchain/ada/transfer`, body, model_1.TransferBtcBasedOffchainKMS);
exports.offchainTransferAdaKMS = offchainTransferAdaKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscOrBepTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferBscKMS = async (body) => tatum_1.post(`/v3/offchain/bsc/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferBscKMS = offchainTransferBscKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloOrErc20Transfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferCeloKMS = async (body) => tatum_1.post(`/v3/offchain/celo/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferCeloKMS = offchainTransferCeloKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferDogeKMS = async (body) => tatum_1.post(`/v3/offchain/dogecoin/transfer`, body, model_1.TransferBtcBasedOffchainKMS);
exports.offchainTransferDogeKMS = offchainTransferDogeKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/PolygonTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferPolygonKMS = async (body) => tatum_1.post(`/v3/offchain/polygon/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferPolygonKMS = offchainTransferPolygonKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/KlaytnTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferKlaytnKMS = async (body) => tatum_1.post(`/v3/offchain/klaytn/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferKlaytnKMS = offchainTransferKlaytnKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/TronTransferOffchain" target="_blank">Tatum API documentation</a>
 */
const offchainTransferTronKMS = async (body) => tatum_1.post(`/v3/offchain/tron/transfer`, body, model_1.TransferTrxOffchain);
exports.offchainTransferTronKMS = offchainTransferTronKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/XdcTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferXdcKMS = async (body) => tatum_1.post(`/v3/offchain/xdc/transfer`, body, model_1.TransferEthOffchainKMS);
exports.offchainTransferXdcKMS = offchainTransferXdcKMS;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/XdcTransfer" target="_blank">Tatum API documentation</a>
 */
const offchainTransferEgldKMS = async (body) => tatum_1.post(`/v3/offchain/egld/transfer`, body, model_1.EgldTransferOffchain);
exports.offchainTransferEgldKMS = offchainTransferEgldKMS;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia21zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL29mZmNoYWluL2ttcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBMEM7QUFDMUMsb0NBUWtCO0FBRWxCOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN0RyxZQUFJLENBQUMsK0JBQStCLEVBQUUsSUFBSSxFQUFFLG1DQUEyQixDQUFDLENBQUM7QUFEOUQsUUFBQSxzQkFBc0IsMEJBQ3dDO0FBRTNFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN0RyxZQUFJLENBQUMsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLG1DQUEyQixDQUFDLENBQUM7QUFEL0QsUUFBQSxzQkFBc0IsMEJBQ3lDO0FBRTVFOztHQUVHO0FBQ0ksTUFBTSx3QkFBd0IsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN4RyxZQUFJLENBQUMsNkJBQTZCLEVBQUUsSUFBSSxFQUFFLG1DQUEyQixDQUFDLENBQUM7QUFENUQsUUFBQSx3QkFBd0IsNEJBQ29DO0FBRXpFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNqRyxZQUFJLENBQUMsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEMUQsUUFBQSxzQkFBc0IsMEJBQ29DO0FBRXZFOztHQUVHO0FBQ0ksTUFBTSwyQkFBMkIsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUN0RyxZQUFJLENBQUMsc0NBQXNDLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEaEUsUUFBQSwyQkFBMkIsK0JBQ3FDO0FBRTdFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNqRyxZQUFJLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEckQsUUFBQSxzQkFBc0IsMEJBQytCO0FBRWxFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNqRyxZQUFJLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEckQsUUFBQSxzQkFBc0IsMEJBQytCO0FBRWxFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN0RyxZQUFJLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxFQUFFLG1DQUEyQixDQUFDLENBQUM7QUFEMUQsUUFBQSxzQkFBc0IsMEJBQ29DO0FBRXZFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNqRyxZQUFJLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEckQsUUFBQSxzQkFBc0IsMEJBQytCO0FBRWxFOztHQUVHO0FBQ0ksTUFBTSx1QkFBdUIsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNsRyxZQUFJLENBQUMsNEJBQTRCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEdEQsUUFBQSx1QkFBdUIsMkJBQytCO0FBRW5FOztHQUVHO0FBQ0ksTUFBTSx1QkFBdUIsR0FBRyxLQUFLLEVBQUUsSUFBaUMsRUFBd0IsRUFBRSxDQUN2RyxZQUFJLENBQUMsZ0NBQWdDLEVBQUUsSUFBSSxFQUFFLG1DQUEyQixDQUFDLENBQUM7QUFEL0QsUUFBQSx1QkFBdUIsMkJBQ3dDO0FBRTVFOztHQUVHO0FBQ0ksTUFBTSwwQkFBMEIsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNyRyxZQUFJLENBQUMsK0JBQStCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEekQsUUFBQSwwQkFBMEIsOEJBQytCO0FBRXRFOztHQUVHO0FBQ0ksTUFBTSx5QkFBeUIsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNwRyxZQUFJLENBQUMsOEJBQThCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEeEQsUUFBQSx5QkFBeUIsNkJBQytCO0FBRXJFOztHQUVHO0FBQ0ksTUFBTSx1QkFBdUIsR0FBRyxLQUFLLEVBQUUsSUFBeUIsRUFBd0IsRUFBRSxDQUMvRixZQUFJLENBQUMsNEJBQTRCLEVBQUUsSUFBSSxFQUFFLDJCQUFtQixDQUFDLENBQUM7QUFEbkQsUUFBQSx1QkFBdUIsMkJBQzRCO0FBRWhFOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQUUsSUFBNEIsRUFBd0IsRUFBRSxDQUNqRyxZQUFJLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxFQUFFLDhCQUFzQixDQUFDLENBQUM7QUFEckQsUUFBQSxzQkFBc0IsMEJBQytCO0FBRWxFOztHQUVHO0FBQ0ksTUFBTSx1QkFBdUIsR0FBRyxLQUFLLEVBQUUsSUFBMEIsRUFBd0IsRUFBRSxDQUNoRyxZQUFJLENBQUMsNEJBQTRCLEVBQUUsSUFBSSxFQUFFLDRCQUFvQixDQUFDLENBQUM7QUFEcEQsUUFBQSx1QkFBdUIsMkJBQzZCIn0=