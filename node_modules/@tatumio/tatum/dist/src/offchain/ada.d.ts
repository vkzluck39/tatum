import { TransactionKMS, TransferBtcBasedOffchain } from '../model';
/**
 * Send Ada transaction from Tatum Ledger account to the blockchain. This method broadcasts signed transaction to the blockchain.
 * This operation is irreversible.
 * @param testnet mainnet or testnet version
 * @param body content of the transaction to broadcast
 * @returns transaction id of the transaction in the blockchain or id of the withdrawal, if it was not cancelled automatically
 */
export declare const sendAdaOffchainTransaction: (testnet: boolean, body: TransferBtcBasedOffchain) => Promise<import("../model").SignatureId | {
    id: string;
    txId: string;
    completed: boolean;
} | {
    id: string;
}>;
/**
 * Sign Ada pending transaction from Tatum KMS
 * @param tx pending transaction from KMS
 * @param mnemonic mnemonic to generate private keys to sign transaction with.
 * @param testnet mainnet or testnet version
 * @returns transaction data to be broadcast to blockchain.
 */
export declare const signAdaOffchainKMSTransaction: (tx: TransactionKMS, mnemonic: string, testnet: boolean) => Promise<string>;
