export declare const TATUM_API_URL = "https://api-eu1.tatum.io";
export declare const TATUM_RETRY_DELAY = 1000;
export declare const TATUM_RETRIES = 5;
export declare const TEST_VET_URL = "https://sync-testnet.vechain.org/";
export declare const VET_URL = "https://sync-mainnet.vechain.org/";
export declare const HARDENED_THRESHOLD = 2147483648;
export declare const ETH_DERIVATION_PATH = "m/44'/60'/0'/0";
export declare const KLAYTN_DERIVATION_PATH = "m/44'/8217'/0'/0";
export declare const MATIC_DERIVATION_PATH = "m/44'/966'/0'/0";
export declare const ONE_DERIVATION_PATH = "m/44'/1023'/0'/0";
export declare const FLOW_DERIVATION_PATH = "m/44'/539'/0'/0";
export declare const CELO_DERIVATION_PATH = "m/44'/52752'/0'/0";
export declare const VET_DERIVATION_PATH = "m/44'/818'/0'/0";
export declare const BTC_DERIVATION_PATH = "m/44'/0'/0'/0";
export declare const QTUM_DERIVATION_PATH = "m/44'/2301'/0'/0";
export declare const TRON_DERIVATION_PATH = "m/44'/195'/0'/0";
export declare const LTC_DERIVATION_PATH = "m/44'/2'/0'/0";
export declare const DOGE_DERIVATION_PATH = "m/44'/3'/0'/0";
export declare const BCH_DERIVATION_PATH = "m/44'/145'/0'/0";
export declare const ADA_DERIVATION_PATH = "m/1852'/1815'/0'";
export declare const XDC_DERIVATION_PATH = "m/44'/550'/0'/0";
export declare const EGLD_DERIVATION_PATH = "m/44'/508'/0'/0'";
export declare const TESTNET_DERIVATION_PATH = "m/44'/1'/0'/0";
export declare const ADA_DERIVATION_SCHEME = 2;
export declare const LTC_TEST_NETWORK: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const LTC_NETWORK: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const QTUM_NETWORK_MAINNET: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const QTUM_NETWORK_TESTNET: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const DOGE_TEST_NETWORK: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const DOGE_NETWORK: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const LYRA_TEST_NETWORK: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const LYRA_NETWORK: {
    messagePrefix: string;
    bech32: string;
    bip32: {
        public: number;
        private: number;
    };
    pubKeyHash: number;
    scriptHash: number;
    wif: number;
};
export declare const RIPPLE_EPOCH = 946684800;
export declare const CUSD_ADDRESS_MAINNET = "0x765de816845861e75a25fca122bb6898b8b1282a";
export declare const CUSD_ADDRESS_TESTNET = "0x874069fa1eb16d44d622f2e0ca25eea172369bc1";
export declare const CEUR_ADDRESS_MAINNET = "0xd8763cba276a3738e6de85b4b3bf5fded6d6ca73";
export declare const CEUR_ADDRESS_TESTNET = "0x10c892a6ec43a53e45d0b916b4b7d383b1b78c0f";
export declare const FLOW_TESTNET_ADDRESSES: {
    FlowToken: string;
    FungibleToken: string;
    FUSD: string;
    TatumMultiNFT: string;
};
export declare const FLOW_MAINNET_ADDRESSES: {
    FlowToken: string;
    FungibleToken: string;
    FUSD: string;
    TatumMultiNFT: string;
};
export declare const CONTRACT_ADDRESSES: {
    [x: string]: string;
};
export declare const CONTRACT_DECIMALS: {
    [x: string]: number;
};
export declare const CUSTODIAL_PROXY_ABI: {
    inputs: {
        internalType: string;
        name: string;
        type: string;
    }[];
    name: string;
    outputs: never[];
    stateMutability: string;
    type: string;
};
export declare const CELO_BASED_CURRENCIES: string[];
export declare const TRANSFER_METHOD_ABI: {
    constant: boolean;
    inputs: {
        name: string;
        type: string;
    }[];
    name: string;
    outputs: {
        name: string;
        type: string;
    }[];
    payable: boolean;
    stateMutability: string;
    type: string;
};
export declare const ESDT_SYSTEM_SMART_CONTRACT_ADDRESS = "erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u";
