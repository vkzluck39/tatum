"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.countTransactionsByLedger = exports.countTransactionsByCustomer = exports.countTransactionsByAccount = exports.getTransactionsByLedger = exports.getTransactionsByCustomer = exports.getTransactionsByAccount = exports.storeTransaction = exports.getTransactionsByReference = void 0;
const tatum_1 = require("../connector/tatum");
const model_1 = require("../model");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactionsByReference" target="_blank">Tatum API documentation</a>
 */
const getTransactionsByReference = async (reference) => tatum_1.get(`/v3/ledger/transaction/reference/${reference}`);
exports.getTransactionsByReference = getTransactionsByReference;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/sendTransaction" target="_blank">Tatum API documentation</a>
 */
const storeTransaction = async (transaction) => tatum_1.post(`/v3/ledger/transaction`, transaction, model_1.CreateTransaction);
exports.storeTransaction = storeTransaction;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactionsByAccountId" target="_blank">Tatum API documentation</a>
 */
const getTransactionsByAccount = async (filter, pageSize = 50, offset = 0) => tatum_1.post(`/v3/ledger/transaction/account?pageSize=${pageSize}&offset=${offset}`, filter, model_1.TransactionFilter);
exports.getTransactionsByAccount = getTransactionsByAccount;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactionsByCustomerId" target="_blank">Tatum API documentation</a>
 */
const getTransactionsByCustomer = async (filter, pageSize = 50, offset = 0) => tatum_1.post(`/v3/ledger/transaction/customer?pageSize=${pageSize}&offset=${offset}`, filter, model_1.TransactionFilter);
exports.getTransactionsByCustomer = getTransactionsByCustomer;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactions" target="_blank">Tatum API documentation</a>
 */
const getTransactionsByLedger = async (filter, pageSize = 50, offset = 0) => tatum_1.post(`/v3/ledger/transaction/ledger?pageSize=${pageSize}&offset=${offset}`, filter, model_1.TransactionFilter);
exports.getTransactionsByLedger = getTransactionsByLedger;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactionsByAccountId" target="_blank">Tatum API documentation</a>
 */
const countTransactionsByAccount = async (filter) => tatum_1.post(`/v3/ledger/transaction/account?count=true`, filter, model_1.TransactionFilter);
exports.countTransactionsByAccount = countTransactionsByAccount;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactionsByCustomerId" target="_blank">Tatum API documentation</a>
 */
const countTransactionsByCustomer = async (filter) => tatum_1.post(`/v3/ledger/transaction/customer?count=true`, filter, model_1.TransactionFilter);
exports.countTransactionsByCustomer = countTransactionsByCustomer;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/getTransactions" target="_blank">Tatum API documentation</a>
 */
const countTransactionsByLedger = async (filter) => tatum_1.post(`/v3/ledger/transaction/ledger?count=true`, filter, model_1.TransactionFilter);
exports.countTransactionsByLedger = countTransactionsByLedger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGVkZ2VyL3RyYW5zYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQUE4QztBQUM5QyxvQ0FBMEU7QUFFMUU7O0dBRUc7QUFDSSxNQUFNLDBCQUEwQixHQUFHLEtBQUssRUFBRSxTQUFpQixFQUEwQixFQUFFLENBQUMsV0FBRyxDQUFDLG9DQUFvQyxTQUFTLEVBQUUsQ0FBQyxDQUFBO0FBQXRJLFFBQUEsMEJBQTBCLDhCQUE0RztBQUVuSjs7R0FFRztBQUNJLE1BQU0sZ0JBQWdCLEdBQUcsS0FBSyxFQUFFLFdBQThCLEVBQWtDLEVBQUUsQ0FDdkcsWUFBSSxDQUFDLHdCQUF3QixFQUFFLFdBQVcsRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRG5ELFFBQUEsZ0JBQWdCLG9CQUNtQztBQUVoRTs7R0FFRztBQUNJLE1BQU0sd0JBQXdCLEdBQUcsS0FBSyxFQUFFLE1BQXlCLEVBQUUsUUFBUSxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUEwQixFQUFFLENBQzdILFlBQUksQ0FBQywyQ0FBMkMsUUFBUSxXQUFXLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRDVGLFFBQUEsd0JBQXdCLDRCQUNvRTtBQUV6Rzs7R0FFRztBQUNJLE1BQU0seUJBQXlCLEdBQUcsS0FBSyxFQUFFLE1BQXlCLEVBQUUsUUFBUSxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUEwQixFQUFFLENBQzlILFlBQUksQ0FBQyw0Q0FBNEMsUUFBUSxXQUFXLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRDdGLFFBQUEseUJBQXlCLDZCQUNvRTtBQUUxRzs7R0FFRztBQUNJLE1BQU0sdUJBQXVCLEdBQUcsS0FBSyxFQUFFLE1BQXlCLEVBQUUsUUFBUSxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUEwQixFQUFFLENBQzVILFlBQUksQ0FBQywwQ0FBMEMsUUFBUSxXQUFXLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRDNGLFFBQUEsdUJBQXVCLDJCQUNvRTtBQUV4Rzs7R0FFRztBQUNJLE1BQU0sMEJBQTBCLEdBQUcsS0FBSyxFQUFFLE1BQXlCLEVBQW1CLEVBQUUsQ0FDN0YsWUFBSSxDQUFDLDJDQUEyQyxFQUFFLE1BQU0sRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRGpFLFFBQUEsMEJBQTBCLDhCQUN1QztBQUU5RTs7R0FFRztBQUNJLE1BQU0sMkJBQTJCLEdBQUcsS0FBSyxFQUFFLE1BQXlCLEVBQW1CLEVBQUUsQ0FDOUYsWUFBSSxDQUFDLDRDQUE0QyxFQUFFLE1BQU0sRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRGxFLFFBQUEsMkJBQTJCLCtCQUN1QztBQUUvRTs7R0FFRztBQUNJLE1BQU0seUJBQXlCLEdBQUcsS0FBSyxFQUFFLE1BQXlCLEVBQW1CLEVBQUUsQ0FDNUYsWUFBSSxDQUFDLDBDQUEwQyxFQUFFLE1BQU0sRUFBRSx5QkFBaUIsQ0FBQyxDQUFBO0FBRGhFLFFBQUEseUJBQXlCLDZCQUN1QyJ9