"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.dogeGetTransaction = exports.dogeGetUTXO = exports.dogeGetBlockHash = exports.dogeGetBlock = exports.dogeGetCurrentBlock = exports.dogeBroadcast = void 0;
const tatum_1 = require("../connector/tatum");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeBroadcast" target="_blank">Tatum API documentation</a>
 */
const dogeBroadcast = async (txData, signatureId) => tatum_1.post(`/v3/dogecoin/broadcast`, { txData, signatureId });
exports.dogeBroadcast = dogeBroadcast;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeGetBlockChainInfo" target="_blank">Tatum API documentation</a>
 */
const dogeGetCurrentBlock = async () => tatum_1.get(`/v3/dogecoin/info`);
exports.dogeGetCurrentBlock = dogeGetCurrentBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeGetBlock" target="_blank">Tatum API documentation</a>
 */
const dogeGetBlock = async (hash) => tatum_1.get(`/v3/dogecoin/block/${hash}`);
exports.dogeGetBlock = dogeGetBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeGetBlockHash" target="_blank">Tatum API documentation</a>
 */
const dogeGetBlockHash = async (i) => tatum_1.get(`/v3/dogecoin/block/hash/${i}`);
exports.dogeGetBlockHash = dogeGetBlockHash;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeGetUTXO" target="_blank">Tatum API documentation</a>
 */
const dogeGetUTXO = async (hash, i) => tatum_1.get(`/v3/dogecoin/utxo/${hash}/${i}`);
exports.dogeGetUTXO = dogeGetUTXO;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/DogeGetRawTransaction" target="_blank">Tatum API documentation</a>
 */
const dogeGetTransaction = async (hash) => tatum_1.get(`/v3/dogecoin/transaction/${hash}`);
exports.dogeGetTransaction = dogeGetTransaction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9nZWNvaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYmxvY2tjaGFpbi9kb2dlY29pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw4Q0FBNEM7QUFHNUM7O0dBRUc7QUFDSSxNQUFNLGFBQWEsR0FBRyxLQUFLLEVBQUUsTUFBYyxFQUFFLFdBQW9CLEVBQTRCLEVBQUUsQ0FDbEcsWUFBSSxDQUFDLHdCQUF3QixFQUFFLEVBQUMsTUFBTSxFQUFFLFdBQVcsRUFBQyxDQUFDLENBQUE7QUFENUMsUUFBQSxhQUFhLGlCQUMrQjtBQUd6RDs7R0FFRztBQUNJLE1BQU0sbUJBQW1CLEdBQUcsS0FBSyxJQUF1QixFQUFFLENBQUMsV0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUE7QUFBN0UsUUFBQSxtQkFBbUIsdUJBQTBEO0FBRTFGOztHQUVHO0FBQ0ksTUFBTSxZQUFZLEdBQUcsS0FBSyxFQUFFLElBQVksRUFBc0IsRUFBRSxDQUFDLFdBQUcsQ0FBQyxzQkFBc0IsSUFBSSxFQUFFLENBQUMsQ0FBQTtBQUE1RixRQUFBLFlBQVksZ0JBQWdGO0FBRXpHOztHQUVHO0FBQ0ksTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLEVBQUUsQ0FBUyxFQUFzQixFQUFFLENBQUMsV0FBRyxDQUFDLDJCQUEyQixDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQS9GLFFBQUEsZ0JBQWdCLG9CQUErRTtBQUU1Rzs7R0FFRztBQUNJLE1BQU0sV0FBVyxHQUFHLEtBQUssRUFBRSxJQUFZLEVBQUUsQ0FBUyxFQUFxQixFQUFFLENBQUMsV0FBRyxDQUFDLHFCQUFxQixJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQTtBQUF6RyxRQUFBLFdBQVcsZUFBOEY7QUFFdEg7O0dBRUc7QUFDSSxNQUFNLGtCQUFrQixHQUFHLEtBQUssRUFBRSxJQUFZLEVBQW1CLEVBQUUsQ0FBQyxXQUFHLENBQUMsNEJBQTRCLElBQUksRUFBRSxDQUFDLENBQUE7QUFBckcsUUFBQSxrQkFBa0Isc0JBQW1GIn0=