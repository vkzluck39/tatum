"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.flowGetTransaction = exports.flowGetAccount = exports.flowGetBlock = exports.flowBroadcastTx = exports.flowGetCurrentBlock = exports.flowGetSignKey = exports.flowSignWithKey = void 0;
const tatum_1 = require("../connector/tatum");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/FlowSign" target="_blank">Tatum API documentation</a>
 */
const flowSignWithKey = async (data, isPayer) => tatum_1.post('/v3/flow/sign', { data, isPayer });
exports.flowSignWithKey = flowSignWithKey;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/FlowGetSignKey" target="_blank">Tatum API documentation</a>
 */
const flowGetSignKey = async (isPayer) => tatum_1.get(`/v3/flow/proposal/${isPayer}`);
exports.flowGetSignKey = flowGetSignKey;
// TODO: return types for FLOW
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/FlowGetCurrentBlock" target="_blank">Tatum API documentation</a>
 */
const flowGetCurrentBlock = async () => tatum_1.get(`/v3/flow/block/current`);
exports.flowGetCurrentBlock = flowGetCurrentBlock;
const flowBroadcastTx = async (txData, signatureId, proposalKey) => tatum_1.post('/v3/flow/broadcast', { txData, signatureId, proposalKey });
exports.flowBroadcastTx = flowBroadcastTx;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/FlowGetBlock" target="_blank">Tatum API documentation</a>
 */
const flowGetBlock = async (hash) => tatum_1.get(`/v3/flow/block/${hash}`);
exports.flowGetBlock = flowGetBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/FlowGetAccount" target="_blank">Tatum API documentation</a>
 */
const flowGetAccount = async (address) => tatum_1.get(`/v3/flow/account/${address}`);
exports.flowGetAccount = flowGetAccount;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/FlowGetTransaction" target="_blank">Tatum API documentation</a>
 */
const flowGetTransaction = async (hash) => tatum_1.get(`/v3/flow/transaction/${hash}`);
exports.flowGetTransaction = flowGetTransaction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvdy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ibG9ja2NoYWluL2Zsb3cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBQTZDO0FBRTdDOztHQUVHO0FBQ0ksTUFBTSxlQUFlLEdBQUcsS0FBSyxFQUFFLElBQVksRUFBRSxPQUFnQixFQUFrQyxFQUFFLENBQ3BHLFlBQUksQ0FBQyxlQUFlLEVBQUUsRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFDLENBQUMsQ0FBQztBQUQ5QixRQUFBLGVBQWUsbUJBQ2U7QUFFM0M7O0dBRUc7QUFDSSxNQUFNLGNBQWMsR0FBRyxLQUFLLEVBQUUsT0FBZ0IsRUFBK0MsRUFBRSxDQUNsRyxXQUFHLENBQUMscUJBQXFCLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFEM0IsUUFBQSxjQUFjLGtCQUNhO0FBRXhDLDhCQUE4QjtBQUM5Qjs7R0FFRztBQUNJLE1BQU0sbUJBQW1CLEdBQUcsS0FBSyxJQUFxQixFQUFFLENBQUMsV0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFBakYsUUFBQSxtQkFBbUIsdUJBQThEO0FBRXZGLE1BQU0sZUFBZSxHQUFHLEtBQUssRUFBRSxNQUFjLEVBQUUsV0FBb0IsRUFBRSxXQUFvQixFQUFFLEVBQUUsQ0FBQyxZQUFJLENBQUMsb0JBQW9CLEVBQzFILEVBQUMsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUMsQ0FBQyxDQUFDO0FBRDNCLFFBQUEsZUFBZSxtQkFDWTtBQUV4Qzs7R0FFRztBQUNJLE1BQU0sWUFBWSxHQUFHLEtBQUssRUFBRSxJQUFZLEVBQWdCLEVBQUUsQ0FBQyxXQUFHLENBQUMsa0JBQWtCLElBQUksRUFBRSxDQUFDLENBQUM7QUFBbkYsUUFBQSxZQUFZLGdCQUF1RTtBQUVoRzs7R0FFRztBQUNJLE1BQU0sY0FBYyxHQUFHLEtBQUssRUFBRSxPQUFlLEVBQWdCLEVBQUUsQ0FBQyxXQUFHLENBQUMsb0JBQW9CLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFBN0YsUUFBQSxjQUFjLGtCQUErRTtBQUUxRzs7R0FFRztBQUNJLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxFQUFFLElBQVksRUFBZ0IsRUFBRSxDQUFDLFdBQUcsQ0FBQyx3QkFBd0IsSUFBSSxFQUFFLENBQUMsQ0FBQztBQUEvRixRQUFBLGtCQUFrQixzQkFBNkUifQ==