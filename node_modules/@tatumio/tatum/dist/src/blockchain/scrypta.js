"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.scryptaGetTransaction = exports.scryptaGetUnspentForAccount = exports.scryptaGetTxForAccount = exports.scryptaGetUTXO = exports.scryptaGetBlockHash = exports.scryptaGetBlock = exports.scryptaGetCurrentBlock = exports.scryptaBroadcast = void 0;
const tatum_1 = require("../connector/tatum");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BroadcastsignedScryptatransaction" target="_blank">Tatum API documentation</a>
 */
const scryptaBroadcast = async (txData, signatureId) => tatum_1.post(`/v3/scrypta/broadcast`, { txData, signatureId });
exports.scryptaBroadcast = scryptaBroadcast;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetBlockChainInfo" target="_blank">Tatum API documentation</a>
 */
const scryptaGetCurrentBlock = async () => tatum_1.get(`/v3/scrypta/info`);
exports.scryptaGetCurrentBlock = scryptaGetCurrentBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetBlock" target="_blank">Tatum API documentation</a>
 */
const scryptaGetBlock = async (hash) => tatum_1.get(`/v3/scrypta/block/${hash}`);
exports.scryptaGetBlock = scryptaGetBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetBlockHash" target="_blank">Tatum API documentation</a>
 */
const scryptaGetBlockHash = async (i) => tatum_1.get(`/v3/scrypta/block/hash/${i}`);
exports.scryptaGetBlockHash = scryptaGetBlockHash;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetUTXO" target="_blank">Tatum API documentation</a>
 */
const scryptaGetUTXO = async (hash, i) => tatum_1.get(`/v3/scrypta/utxo/${hash}/${i}`);
exports.scryptaGetUTXO = scryptaGetUTXO;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetTxByAddress" target="_blank">Tatum API documentation</a>
 */
const scryptaGetTxForAccount = async (address, pageSize = 50, offset = 0) => tatum_1.get(`/v3/scrypta/transaction/address/${address}?pageSize=${pageSize}&offset=${offset}`);
exports.scryptaGetTxForAccount = scryptaGetTxForAccount;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetTxByAddress" target="_blank">Tatum API documentation</a>
 */
const scryptaGetUnspentForAccount = async (address, pageSize = 50, offset = 0) => tatum_1.get(`/v3/scrypta/utxo/${address}?pageSize=${pageSize}&offset=${offset}`);
exports.scryptaGetUnspentForAccount = scryptaGetUnspentForAccount;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetRawTransaction" target="_blank">Tatum API documentation</a>
 */
const scryptaGetTransaction = async (hash) => tatum_1.get(`/v3/scrypta/transaction/${hash}`);
exports.scryptaGetTransaction = scryptaGetTransaction;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyeXB0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ibG9ja2NoYWluL3NjcnlwdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBQThDO0FBRzlDOztHQUVHO0FBQ0ksTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLEVBQUUsTUFBYyxFQUFFLFdBQW9CLEVBQTRCLEVBQUUsQ0FDdkcsWUFBSSxDQUFDLHVCQUF1QixFQUFFLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxDQUFDLENBQUE7QUFEM0MsUUFBQSxnQkFBZ0Isb0JBQzJCO0FBRXhEOztHQUVHO0FBQ0ksTUFBTSxzQkFBc0IsR0FBRyxLQUFLLElBQTBCLEVBQUUsQ0FBQyxXQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtBQUFsRixRQUFBLHNCQUFzQiwwQkFBNEQ7QUFFL0Y7O0dBRUc7QUFDSSxNQUFNLGVBQWUsR0FBRyxLQUFLLEVBQUUsSUFBWSxFQUF5QixFQUFFLENBQUMsV0FBRyxDQUFDLHFCQUFxQixJQUFJLEVBQUUsQ0FBQyxDQUFBO0FBQWpHLFFBQUEsZUFBZSxtQkFBa0Y7QUFFOUc7O0dBRUc7QUFDSSxNQUFNLG1CQUFtQixHQUFHLEtBQUssRUFBRSxDQUFTLEVBQXNCLEVBQUUsQ0FBQyxXQUFHLENBQUMsMEJBQTBCLENBQUMsRUFBRSxDQUFDLENBQUE7QUFBakcsUUFBQSxtQkFBbUIsdUJBQThFO0FBRTlHOztHQUVHO0FBQ0ksTUFBTSxjQUFjLEdBQUcsS0FBSyxFQUFFLElBQVksRUFBRSxDQUFTLEVBQXdCLEVBQUUsQ0FBQyxXQUFHLENBQUMsb0JBQW9CLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO0FBQTlHLFFBQUEsY0FBYyxrQkFBZ0c7QUFFM0g7O0dBRUc7QUFDSSxNQUFNLHNCQUFzQixHQUFHLEtBQUssRUFBRSxPQUFlLEVBQUUsUUFBUSxHQUFHLEVBQUUsRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUF3QixFQUFFLENBQy9HLFdBQUcsQ0FBQyxtQ0FBbUMsT0FBTyxhQUFhLFFBQVEsV0FBVyxNQUFNLEVBQUUsQ0FBQyxDQUFBO0FBRDVFLFFBQUEsc0JBQXNCLDBCQUNzRDtBQUV6Rjs7R0FFRztBQUNJLE1BQU0sMkJBQTJCLEdBQUcsS0FBSyxFQUFFLE9BQWUsRUFBRSxRQUFRLEdBQUcsRUFBRSxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQTBCLEVBQUUsQ0FDdEgsV0FBRyxDQUFDLG9CQUFvQixPQUFPLGFBQWEsUUFBUSxXQUFXLE1BQU0sRUFBRSxDQUFDLENBQUE7QUFEN0QsUUFBQSwyQkFBMkIsK0JBQ2tDO0FBRTFFOztHQUVHO0FBQ0ksTUFBTSxxQkFBcUIsR0FBRyxLQUFLLEVBQUUsSUFBWSxFQUFzQixFQUFFLENBQUMsV0FBRyxDQUFDLDJCQUEyQixJQUFJLEVBQUUsQ0FBQyxDQUFBO0FBQTFHLFFBQUEscUJBQXFCLHlCQUFxRiJ9