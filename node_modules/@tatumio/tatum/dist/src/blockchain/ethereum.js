"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ethEstimateGas = exports.ethGetAccountTransactions = exports.ethGetTransaction = exports.ethGetAccountErc20Address = exports.ethGetAccountBalance = exports.ethGetBlock = exports.ethGetCurrentBlock = exports.ethGetTransactionsCount = exports.ethBroadcast = void 0;
const tatum_1 = require("../connector/tatum");
const model_1 = require("../model");
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthBroadcast" target="_blank">Tatum API documentation</a>
 */
const ethBroadcast = async (txData, signatureId) => tatum_1.post(`/v3/ethereum/broadcast`, { txData, signatureId });
exports.ethBroadcast = ethBroadcast;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthGetTransactionCount" target="_blank">Tatum API documentation</a>
 */
const ethGetTransactionsCount = async (address) => tatum_1.get(`/v3/ethereum/transaction/count/${address}`);
exports.ethGetTransactionsCount = ethGetTransactionsCount;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthGetCurrentBlock" target="_blank">Tatum API documentation</a>
 */
const ethGetCurrentBlock = async () => tatum_1.get(`/v3/ethereum/block/current`);
exports.ethGetCurrentBlock = ethGetCurrentBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthGetBlock" target="_blank">Tatum API documentation</a>
 */
const ethGetBlock = async (hash) => tatum_1.get(`/v3/ethereum/block/${hash}`);
exports.ethGetBlock = ethGetBlock;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthGetBalance" target="_blank">Tatum API documentation</a>
 */
const ethGetAccountBalance = async (address) => tatum_1.get(`/v3/ethereum/account/balance/${address}`);
exports.ethGetAccountBalance = ethGetAccountBalance;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthErc20GetBalance" target="_blank">Tatum API documentation</a>
 */
const ethGetAccountErc20Address = async (address, contractAddress) => tatum_1.get(`/v3/ethereum/account/balance/erc20/${address}?contractAddress=${contractAddress}`);
exports.ethGetAccountErc20Address = ethGetAccountErc20Address;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthGetTransaction" target="_blank">Tatum API documentation</a>
 */
const ethGetTransaction = async (hash) => tatum_1.get(`/v3/ethereum/transaction/${hash}`);
exports.ethGetTransaction = ethGetTransaction;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthGetTransactionByAddress" target="_blank">Tatum API documentation</a>
 */
const ethGetAccountTransactions = async (address, pageSize = 50, offset = 0) => tatum_1.get(`/v3/ethereum/account/transaction/${address}?pageSize=${pageSize}&offset=${offset}`);
exports.ethGetAccountTransactions = ethGetAccountTransactions;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/EthEstimateGas" target="_blank">Tatum API documentation</a>
 */
const ethEstimateGas = (body) => tatum_1.post('/v3/ethereum/gas', body, model_1.EstimateGasEth);
exports.ethEstimateGas = ethEstimateGas;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoZXJldW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvYmxvY2tjaGFpbi9ldGhlcmV1bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSw4Q0FBOEM7QUFDOUMsb0NBQTJGO0FBRTNGOztHQUVHO0FBQ0ksTUFBTSxZQUFZLEdBQUcsS0FBSyxFQUFFLE1BQWMsRUFBRSxXQUFvQixFQUE0QixFQUFFLENBQ25HLFlBQUksQ0FBQyx3QkFBd0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsQ0FBQyxDQUFBO0FBRDVDLFFBQUEsWUFBWSxnQkFDZ0M7QUFFekQ7O0dBRUc7QUFDSSxNQUFNLHVCQUF1QixHQUFHLEtBQUssRUFBRSxPQUFlLEVBQW1CLEVBQUUsQ0FBQyxXQUFHLENBQUMsa0NBQWtDLE9BQU8sRUFBRSxDQUFDLENBQUE7QUFBdEgsUUFBQSx1QkFBdUIsMkJBQStGO0FBRW5JOztHQUVHO0FBQ0ksTUFBTSxrQkFBa0IsR0FBRyxLQUFLLElBQXFCLEVBQUUsQ0FBQyxXQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQUFuRixRQUFBLGtCQUFrQixzQkFBaUU7QUFFaEc7O0dBRUc7QUFDSSxNQUFNLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBWSxFQUFxQixFQUFFLENBQUMsV0FBRyxDQUFDLHNCQUFzQixJQUFJLEVBQUUsQ0FBQyxDQUFBO0FBQTFGLFFBQUEsV0FBVyxlQUErRTtBQUV2Rzs7R0FFRztBQUNJLE1BQU0sb0JBQW9CLEdBQUcsS0FBSyxFQUFFLE9BQWUsRUFBc0IsRUFBRSxDQUFDLFdBQUcsQ0FBQyxnQ0FBZ0MsT0FBTyxFQUFFLENBQUMsQ0FBQTtBQUFwSCxRQUFBLG9CQUFvQix3QkFBZ0c7QUFFakk7O0dBRUc7QUFDSSxNQUFNLHlCQUF5QixHQUFHLEtBQUssRUFBRSxPQUFlLEVBQUUsZUFBdUIsRUFBZ0MsRUFBRSxDQUN4SCxXQUFHLENBQUMsc0NBQXNDLE9BQU8sb0JBQW9CLGVBQWUsRUFBRSxDQUFDLENBQUE7QUFENUUsUUFBQSx5QkFBeUIsNkJBQ21EO0FBRXpGOztHQUVHO0FBQ0ksTUFBTSxpQkFBaUIsR0FBRyxLQUFLLEVBQUUsSUFBWSxFQUFrQixFQUFFLENBQUMsV0FBRyxDQUFDLDRCQUE0QixJQUFJLEVBQUUsQ0FBQyxDQUFBO0FBQW5HLFFBQUEsaUJBQWlCLHFCQUFrRjtBQUVoSDs7R0FFRztBQUNJLE1BQU0seUJBQXlCLEdBQUcsS0FBSyxFQUFFLE9BQWUsRUFBRSxRQUFRLEdBQUcsRUFBRSxFQUFFLE1BQU0sR0FBRyxDQUFDLEVBQW9CLEVBQUUsQ0FDOUcsV0FBRyxDQUFDLG9DQUFvQyxPQUFPLGFBQWEsUUFBUSxXQUFXLE1BQU0sRUFBRSxDQUFDLENBQUE7QUFEN0UsUUFBQSx5QkFBeUIsNkJBQ29EO0FBRTFGOztHQUVHO0FBQ0ksTUFBTSxjQUFjLEdBQUcsQ0FBQyxJQUFvQixFQUEyQixFQUFFLENBQUMsWUFBSSxDQUFDLGtCQUFrQixFQUFFLElBQUksRUFBRSxzQkFBYyxDQUFDLENBQUE7QUFBbEgsUUFBQSxjQUFjLGtCQUFvRyJ9