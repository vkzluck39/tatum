import BigNumber from 'bignumber.js';
import { Block, Transaction } from 'web3-eth';
import { TransactionHash } from '../model';
/**
 * Broadcasts signed transaction to the Celo blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloBroadcast" target="_blank">Tatum API documentation</a>
 */
export declare const celoBroadcast: (txData: string, signatureId?: string | undefined) => Promise<TransactionHash>;
/**
 * Returns a number of outgoing transactions for the address from Celo blockchain. <br>
 * When a transaction is sent, there can be multiple outgoing transactions, which are not yet processed by the blockchain.
 * To distinguish between them, there is a counter called a nonce, which represents the order of the transaction in the list of outgoing transactions.
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloGetTransactionCount" target="_blank">Tatum API documentation</a>
 */
export declare const celoGetTransactionsCount: (address: string) => Promise<number>;
/**
 * Returns information about Celo blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloGetCurrentBlock" target="_blank">Tatum API documentation</a>
 */
export declare const celoGetCurrentBlock: () => Promise<number>;
/**
 * Returns block by its hash from Celo blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloGetBlock" target="_blank">Tatum API documentation</a>
 */
export declare const celoGetBlock: (hash: string) => Promise<Block>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloGetBalance" target="_blank">Tatum API documentation</a>
 */
export declare const celoGetAccountBalance: (address: string) => Promise<{
    celo: BigNumber;
    cUsd: BigNumber;
}>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/CeloGetTransaction" target="_blank">Tatum API documentation</a>
 */
export declare const celoGetTransaction: (hash: string) => Promise<Transaction>;
