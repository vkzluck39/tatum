import BigNumber from 'bignumber.js';
import { EstimateGasEth, EthBlock, EthEstimateGas, EthTx, TransactionHash } from '../model';
/**
 * Broadcasts signed transaction to the Bsc blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscBroadcast" target="_blank">Tatum API documentation</a>
 */
export declare const bscBroadcast: (txData: string, signatureId?: string | undefined) => Promise<TransactionHash>;
/**
 * Returns a number of outgoing BSC transactions for the address from Bsc blockchain. <br>
 * When a transaction is sent, there can be multiple outgoing transactions, which are not yet processed by the blockchain.
 * To distinguish between them, there is a counter called a nonce, which represents the order of the transaction in the list of outgoing transactions. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscGetTransactionCount" target="_blank">Tatum API documentation</a>
 */
export declare const bscGetTransactionsCount: (address: string) => Promise<number>;
/**
 * Returns information about Bsc blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscGetCurrentBlock" target="_blank">Tatum API documentation</a>
 */
export declare const bscGetCurrentBlock: () => Promise<number>;
/**
 * Returns block by its hash from Bsc blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscGetBlock" target="_blank">Tatum API documentation</a>
 */
export declare const bscGetBlock: (hash: string) => Promise<EthBlock>;
/**
 * Returns balance on address from Bsc blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscGetBalance" target="_blank">Tatum API documentation</a>
 */
export declare const bscGetAccountBalance: (address: string) => Promise<BigNumber>;
/**
 * TODO: This endpoint dont exists? @SamuelSramko
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscBep20GetBalance" target="_blank">Tatum API documentation</a>
 */
export declare const bscGetAccountBep20Address: (address: string, contractAddress: string) => Promise<number>;
/**
 * Returns transaction by hash from Bsc blockchain. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscGetTransaction" target="_blank">Tatum API documentation</a>
 */
export declare const bscGetTransaction: (hash: string) => Promise<EthTx>;
/**
 * Returns gasLimit and gasPrice estimation of the transaction from Bsc blockchain. <br>
 * Gas price is obtained from https://explorer.bitquery.io/bsc/gas. <br>
 * For more details, see <a href="https://tatum.io/apidoc#operation/BscEstimateGas" target="_blank">Tatum API documentation</a>
 */
export declare const bscEstimateGas: (body: EstimateGasEth) => Promise<EthEstimateGas>;
