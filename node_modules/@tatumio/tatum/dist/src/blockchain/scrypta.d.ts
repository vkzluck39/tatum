import { BlockHash, ScryptaBlock, ScryptaInfo, ScryptaTx, ScryptaUTXO, TransactionHash } from '../model';
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/BroadcastsignedScryptatransaction" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaBroadcast: (txData: string, signatureId?: string | undefined) => Promise<TransactionHash>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetBlockChainInfo" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetCurrentBlock: () => Promise<ScryptaInfo>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetBlock" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetBlock: (hash: string) => Promise<ScryptaBlock>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetBlockHash" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetBlockHash: (i: number) => Promise<BlockHash>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetUTXO" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetUTXO: (hash: string, i: number) => Promise<ScryptaUTXO>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetTxByAddress" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetTxForAccount: (address: string, pageSize?: number, offset?: number) => Promise<ScryptaTx[]>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetTxByAddress" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetUnspentForAccount: (address: string, pageSize?: number, offset?: number) => Promise<ScryptaUTXO[]>;
/**
 * For more details, see <a href="https://tatum.io/apidoc#operation/ScryptaGetRawTransaction" target="_blank">Tatum API documentation</a>
 */
export declare const scryptaGetTransaction: (hash: string) => Promise<ScryptaTx>;
